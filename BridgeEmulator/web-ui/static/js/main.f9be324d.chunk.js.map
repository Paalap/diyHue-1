{"version":3,"sources":["color.js","Room.js","App.js","index.js"],"names":["cieToRgb","x","y","brightness","undefined","z","Y","toFixed","X","Z","red","green","blue","Math","pow","round","isNaN","toString","substr","colorTemperatureToRgb","mireds","hectemp","log","parseInt","rgbToCie","parseFloat","ct","light","state","xy","bri","TemperatureSlider","styled","Slider","StyledList","List","IconButton","MdiIconButton","enhance","compose","withState","window","matchMedia","matches","lifecycle","componentDidMount","addEventListener","_throttle","props","setSmallScreen","setColorTemperature","setColor","setBrightness","setState","room","lights","isDialogOpen","setDialogOpen","selectedLight","setSelectedLight","smallScreen","subheader","ListSubheader","name","ListItemSecondaryAction","Switch","checked","any_on","onChange","filter","id","Boolean","map","ListItem","key","ListItemIcon","onClick","on","color","colormode","ListItemText","primary","Dialog","fullScreen","open","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","Avatar","min","max","defaultValue","secondary","temp","width","defaultColor","DialogActions","Button","autoFocus","flex","css","useStyles","makeStyles","theme","root","flexGrow","height","zIndex","overflow","position","display","appBar","drawer","marginLeft","breakpoints","up","navIconHide","toolbar","mixins","drawerPaper","content","backgroundColor","palette","background","default","padding","spacing","unit","minWidth","anyLightOn","groups","Object","values","some","group","navigation","component","button","href","App","onColorTemperatureChange","onColorChange","onBrightnessChange","onStateChange","onGlobalStateChange","classes","useState","className","AppBar","Toolbar","Typography","variant","FormControlLabel","control","label","style","Hidden","mdUp","Drawer","paper","ModalProps","keepMounted","smDown","implementation","keys","httpPutRequest","url","data","fetch","method","mode","body","JSON","stringify","headers","then","res","catch","err","console","error","message","injectGlobal","API_KEY","config","throttle","AppWithData","withProps","entity","type","setInterval","a","Promise","all","json","setGroups","setLights","render","document","getElementById"],"mappings":"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","file":"static/js/main.f9be324d.chunk.js","sourcesContent":["export function cieToRgb(x, y, brightness) {\n  //Set to maximum brightness if no custom value was given (Not the slick ECMAScript 6 way for compatibility reasons)\n  if (brightness === undefined) {\n    brightness = 254;\n  }\n\n  var z = 1.0 - x - y;\n  var Y = (brightness / 254).toFixed(2);\n  var X = Y / y * x;\n  var Z = Y / y * z;\n\n  //Convert to RGB using Wide RGB D65 conversion\n  var red = X * 1.656492 - Y * 0.354851 - Z * 0.255038;\n  var green = -X * 0.707196 + Y * 1.655397 + Z * 0.036152;\n  var blue = X * 0.051713 - Y * 0.121364 + Z * 1.01153;\n\n  //If red, green or blue is larger than 1.0 set it back to the maximum of 1.0\n  if (red > blue && red > green && red > 1.0) {\n    green = green / red;\n    blue = blue / red;\n    red = 1.0;\n  } else if (green > blue && green > red && green > 1.0) {\n    red = red / green;\n    blue = blue / green;\n    green = 1.0;\n  } else if (blue > red && blue > green && blue > 1.0) {\n    red = red / blue;\n    green = green / blue;\n    blue = 1.0;\n  }\n\n  //Reverse gamma correction\n  red =\n    red <= 0.0031308\n      ? 12.92 * red\n      : (1.0 + 0.055) * Math.pow(red, 1.0 / 2.4) - 0.055;\n  green =\n    green <= 0.0031308\n      ? 12.92 * green\n      : (1.0 + 0.055) * Math.pow(green, 1.0 / 2.4) - 0.055;\n  blue =\n    blue <= 0.0031308\n      ? 12.92 * blue\n      : (1.0 + 0.055) * Math.pow(blue, 1.0 / 2.4) - 0.055;\n\n  //Convert normalized decimal to decimal\n  red = Math.round(red * 255);\n  green = Math.round(green * 255);\n  blue = Math.round(blue * 255);\n\n  if (isNaN(red)) red = 0;\n\n  if (isNaN(green)) green = 0;\n\n  if (isNaN(blue)) blue = 0;\n\n  var decColor = 0x1000000 + blue + 0x100 * green + 0x10000 * red;\n  return \"#\" + decColor.toString(16).substr(1);\n}\n\nexport function colorTemperatureToRgb(mireds) {\n  var hectemp = 20000.0 / mireds;\n\n  var red, green, blue;\n\n  if (hectemp <= 66) {\n    red = 255;\n    green = 99.4708025861 * Math.log(hectemp) - 161.1195681661;\n    blue =\n      hectemp <= 19\n        ? 0\n        : 138.5177312231 * Math.log(hectemp - 10) - 305.0447927307;\n  } else {\n    red = 329.698727446 * Math.pow(hectemp - 60, -0.1332047592);\n    green = 288.1221695283 * Math.pow(hectemp - 60, -0.0755148492);\n    blue = 255;\n  }\n\n  red = red > 255 ? 255 : red;\n  green = green > 255 ? 255 : green;\n  blue = blue > 255 ? 255 : blue;\n\n  var decColor =\n    0x1000000 +\n    parseInt(blue, 10) +\n    0x100 * parseInt(green, 10) +\n    0x10000 * parseInt(red, 10);\n  return \"#\" + decColor.toString(16).substr(1);\n}\n\nexport function rgbToCie(red, green, blue) {\n  //Apply a gamma correction to the RGB values, which makes the color more vivid and more the like the color displayed on the screen of your device\n  red =\n    red > 0.04045 ? Math.pow((red + 0.055) / (1.0 + 0.055), 2.4) : red / 12.92;\n  green =\n    green > 0.04045\n      ? Math.pow((green + 0.055) / (1.0 + 0.055), 2.4)\n      : green / 12.92;\n  blue =\n    blue > 0.04045\n      ? Math.pow((blue + 0.055) / (1.0 + 0.055), 2.4)\n      : blue / 12.92;\n\n  //RGB values to XYZ using the Wide RGB D65 conversion formula\n  var X = red * 0.664511 + green * 0.154324 + blue * 0.162028;\n  var Y = red * 0.283881 + green * 0.668433 + blue * 0.047685;\n  var Z = red * 0.000088 + green * 0.07231 + blue * 0.986039;\n\n  //Calculate the xy values from the XYZ values\n  var x = (X / (X + Y + Z)).toFixed(4);\n  var y = (Y / (X + Y + Z)).toFixed(4);\n\n  if (isNaN(x)) x = 0;\n\n  if (isNaN(y)) y = 0;\n\n  return [parseFloat(x), parseFloat(y)];\n}\n\nexport default {\n  ct: light => colorTemperatureToRgb(light.state.ct),\n  xy: ({ state: { xy = [0, 0], bri = 0 } }) => cieToRgb(xy[0], xy[1], bri)\n};\n","import React, { Fragment } from \"react\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport MdiIconButton from \"@material-ui/core/IconButton\";\nimport LightbulbOnIcon from \"mdi-react/LightbulbOnIcon\";\nimport LightbulbOutlineIcon from \"mdi-react/LightbulbOutlineIcon\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Button from \"@material-ui/core/Button\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport BrightnessIcon from \"mdi-react/Brightness6Icon\";\nimport TemperatureKelvinIcon from \"mdi-react/TemperatureKelvinIcon\";\nimport PaletteIcon from \"mdi-react/PaletteIcon\";\nimport styled from \"react-emotion\";\nimport { HuePicker } from \"react-color\";\n\n// TODO: style this slider to match Material Design\nimport Slider from \"rc-slider\";\nimport \"rc-slider/assets/index.css\";\nimport { compose, withState, lifecycle } from \"recompose\";\nimport _throttle from \"lodash/fp/throttle\";\nimport color from \"./color\";\nimport { cieToRgb } from \"./color\";\nimport { colorTemperatureToRgb } from \"./color\";\n\nconst TemperatureSlider = styled(Slider)`\n  .rc-slider-rail {\n    background-image: linear-gradient(\n      to right,\n      #5373d8,\n      #c7e1fd,\n      #fae3a8,\n      #c14334\n    );\n  }\n  .rc-slider-track {\n    background: transparent;\n  }\n`;\n\nconst StyledList = styled(List)`\n  width: 500px;\n  max-width: calc(100vw - 80px);\n`;\n\nconst IconButton = styled(MdiIconButton)`\n  margin-top: -0.5em !important;\n  margin-bottom: -0.5em !important;\n`;\n\nconst enhance = compose(\n  withState(\"isDialogOpen\", \"setDialogOpen\", false),\n  withState(\"selectedLight\", \"setSelectedLight\", undefined),\n  withState(\n    \"smallScreen\",\n    \"setSmallScreen\",\n    window.matchMedia(\"(max-width: 800px)\").matches\n  ),\n  lifecycle({\n    componentDidMount() {\n      window.addEventListener(\n        \"resize\",\n        _throttle(500)(() =>\n          this.props.setSmallScreen(\n            window.matchMedia(\"(max-width: 800px)\").matches\n          )\n        )\n      );\n    }\n  })\n);\n\nconst Room = ({\n  setColorTemperature,\n  setColor,\n  setBrightness,\n  setState,\n  room,\n  lights,\n  isDialogOpen,\n  setDialogOpen,\n  selectedLight,\n  setSelectedLight,\n  smallScreen\n}) => (\n  <List\n    subheader={\n      <ListSubheader>\n        {room.name}\n        <ListItemSecondaryAction>\n          <Switch\n            checked={room.state.any_on}\n            onChange={() => setState(room, !room.state.any_on)}\n          />\n        </ListItemSecondaryAction>\n      </ListSubheader>\n    }\n  >\n    {room.lights\n      .filter(id => Boolean(lights[id]))\n      .map(id => ({ ...lights[id], id }))\n      .map(light => (\n        <ListItem key={light.id}>\n          <ListItemIcon>\n            <IconButton\n              onClick={() => {\n                setDialogOpen(true);\n                setSelectedLight(light);\n              }}\n            >\n              {light.state.on ? (\n                <LightbulbOnIcon\n                  color={\n                    light.state.colormode === \"ct\"\n                      ? colorTemperatureToRgb(light.state.ct)\n                      : light.state.colormode === \"xy\"\n                      ? cieToRgb(\n                          light.state.xy[0],\n                          light.state.xy[1],\n                          light.state.bri\n                        )\n                      : '#fcf794'\n                  }\n                />\n              ) : (\n                <LightbulbOutlineIcon />\n              )}\n            </IconButton>\n          </ListItemIcon>\n          <ListItemText primary={light.name} />\n          <ListItemSecondaryAction>\n            <Switch\n              checked={light.state.on}\n              onChange={() => setState(light, !light.state.on)}\n            />\n          </ListItemSecondaryAction>\n        </ListItem>\n      ))}\n    <Dialog\n      fullScreen={smallScreen}\n      open={isDialogOpen}\n      onClose={() => setDialogOpen(false)}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      {selectedLight ? (\n        <Fragment>\n          <DialogTitle id=\"alert-dialog-title\">\n            {room.name} {selectedLight.name}\n          </DialogTitle>\n          <DialogContent>\n            <StyledList>\n              {\"bri\" in selectedLight.state && (\n                <ListItem>\n                  <Avatar>\n                    <BrightnessIcon color=\"white\" />\n                  </Avatar>\n                  <ListItemText\n                    primary={\n                      <Slider\n                        min={0}\n                        max={255}\n                        defaultValue={\n                          selectedLight.state.on ? selectedLight.state.bri : 0\n                        }\n                        onChange={bri => setBrightness(selectedLight, bri)}\n                      />\n                    }\n                    secondary=\"Brightness\"\n                  />\n                </ListItem>\n              )}\n              {\"ct\" in selectedLight.state && (\n                <ListItem>\n                  <Avatar>\n                    <TemperatureKelvinIcon color=\"white\" />\n                  </Avatar>\n                  <ListItemText\n                    primary={\n                      <TemperatureSlider\n                        min={153}\n                        max={500}\n                        defaultValue={Math.max(\n                          153,\n                          Math.min(selectedLight.state.ct, 500)\n                        )}\n                        onChange={temp =>\n                          setColorTemperature(selectedLight, temp)\n                        }\n                      />\n                    }\n                    secondary=\"Temperature\"\n                  />\n                </ListItem>\n              )}\n              {(\"xy\" in selectedLight.state ||\n                \"hue\" in selectedLight.state) && (\n                <ListItem>\n                  <Avatar>\n                    <PaletteIcon color=\"white\" />\n                  </Avatar>\n                  <ListItemText\n                    primary={\n                      <HuePicker\n                        width=\"100%\"\n                        color={cieToRgb(selectedLight.state.xy[0],selectedLight.state.xy[1],selectedLight.state.bri)}\n                        defaultColor={color[selectedLight.state.colormode](\n                          selectedLight\n                        )}\n                        onChange={color => setColor(selectedLight, color)}\n                      />\n                    }\n                    secondary=\"Color\"\n                  />\n                </ListItem>\n              )}\n            </StyledList>\n          </DialogContent>\n          <DialogActions>\n            <Button\n              onClick={() => setDialogOpen(false)}\n              color=\"primary\"\n              autoFocus\n            >\n              Close\n            </Button>\n          </DialogActions>\n        </Fragment>\n      ) : (\n        <span />\n      )}\n    </Dialog>\n  </List>\n);\n\nexport default enhance(Room);\n","import React, { useState } from \"react\";\nimport { css } from \"react-emotion\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  Switch,\n  Drawer,\n  FormControlLabel,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  IconButton,\n  Hidden,\n} from \"@material-ui/core\";\nimport LightbulbOnIcon from \"mdi-react/LightbulbOnIcon\";\nimport LinkIcon from \"mdi-react/LinkVariantIcon\";\nimport ImportIcon from \"mdi-react/ImportIcon\";\nimport MenuIcon from \"mdi-react/MenuIcon\";\nimport Room from \"./Room\";\n\nconst flex = css`\n  flex: 1;\n`;\n\nconst drawerWidth = 240;\n\nconst styles = (theme) => ({\n  root: {\n    flexGrow: 1,\n    height: \"100vh\",\n    zIndex: 1,\n    overflow: \"hidden\",\n    position: \"relative\",\n    display: \"flex\",\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    marginLeft: drawerWidth,\n    [theme.breakpoints.up(\"md\")]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n    },\n  },\n  navIconHide: {\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"none\",\n    },\n  },\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,\n    [theme.breakpoints.up(\"md\")]: {\n      position: \"relative\",\n    },\n  },\n  content: {\n    flexGrow: 1,\n    overflow: \"auto\",\n    backgroundColor: theme.palette.background.default,\n    padding: theme.spacing.unit * 3,\n    minWidth: 0, // So the Typography noWrap works\n  },\n});\nconst useStyles = makeStyles(styles);\n\nconst anyLightOn = (groups) =>\n  Object.values(groups).some((group) => group.state.any_on);\n\nconst navigation = (\n  <List component=\"nav\">\n    <ListItem button href=\"/\" component=\"a\">\n      <ListItemIcon>\n        <LightbulbOnIcon />\n      </ListItemIcon>\n      <ListItemText>Lights control</ListItemText>\n    </ListItem>\n\n    <ListItem button href=\"/hue/linkbutton\" component=\"a\">\n      <ListItemIcon>\n        <LinkIcon />\n      </ListItemIcon>\n      <ListItemText>Link device</ListItemText>\n    </ListItem>\n\n    <ListItem button href=\"/hue\" component=\"a\">\n      <ListItemIcon>\n        <ImportIcon />\n      </ListItemIcon>\n      <ListItemText>Import from bridge</ListItemText>\n    </ListItem>\n\n    <ListItem button href=\"/tradfri\" component=\"a\">\n      <ListItemIcon>\n        <ImportIcon />\n      </ListItemIcon>\n      <ListItemText>Import from Tradfri</ListItemText>\n    </ListItem>\n\n    <ListItem button href=\"/deconz\" component=\"a\">\n      <ListItemIcon>\n        <ImportIcon />\n      </ListItemIcon>\n      <ListItemText>Deconz</ListItemText>\n    </ListItem>\n\n    <ListItem button href=\"/milight\" component=\"a\">\n      <ListItemIcon>\n        <ImportIcon />\n      </ListItemIcon>\n      <ListItemText>Add MiLight Bulb</ListItemText>\n    </ListItem>\n  </List>\n);\n\nconst App = ({\n  groups,\n  lights,\n  onColorTemperatureChange,\n  onColorChange,\n  onBrightnessChange,\n  onStateChange,\n  onGlobalStateChange,\n}) => {\n  const classes = useStyles();\n  const [state, setState] = useState({ drawer: false });\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"absolute\" className={classes.appBar}>\n        <Toolbar>\n          <IconButton\n            onClick={() => setState({ drawer: true })}\n            className={classes.navIconHide}\n          >\n            <MenuIcon color=\"white\" />\n          </IconButton>\n          <Typography variant=\"title\" color=\"inherit\" className={flex}>\n            Hue Emulator\n          </Typography>\n          <FormControlLabel\n            control={\n              <Switch\n                checked={anyLightOn(groups)}\n                onChange={() => onGlobalStateChange(!anyLightOn(groups))}\n              />\n            }\n            label={\n              <span style={{ color: \"white\" }}>\n                Turn all {anyLightOn(groups) ? \"off\" : \"on\"}\n              </span>\n            }\n          />\n        </Toolbar>\n      </AppBar>\n      <Hidden mdUp>\n        <Drawer\n          variant=\"temporary\"\n          open={state.drawer}\n          onClose={() => setState({ drawer: false })}\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n          ModalProps={{\n            keepMounted: true, // Better open performance on mobile.\n          }}\n        >\n          <div className={classes.toolbar} />\n          {navigation}\n        </Drawer>\n      </Hidden>\n      <Hidden smDown implementation=\"css\">\n        <Drawer\n          variant=\"permanent\"\n          open\n          onClose={() => setState({ drawer: false })}\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n        >\n          <div className={classes.toolbar} />\n          {navigation}\n        </Drawer>\n      </Hidden>\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        {Object.keys(groups)\n          .map((id) => ({ ...groups[id], id }))\n          .map((group) => (\n            <Room\n              key={group.id}\n              room={group}\n              lights={lights}\n              setColorTemperature={onColorTemperatureChange}\n              setColor={onColorChange}\n              setBrightness={onBrightnessChange}\n              setState={onStateChange}\n            />\n          ))}\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport { injectGlobal } from \"react-emotion\";\nimport { compose, withState, lifecycle, withProps } from \"recompose\";\nimport _throttle from \"lodash/fp/throttle\";\nimport App from \"./App\";\nimport { rgbToCie } from \"./color\";\n\ninjectGlobal`\n  html, body {\n    margin: 0;\n  }\n`;\n\nexport function httpPutRequest(url, data) {\n  return fetch(url, {\n    method: \"PUT\",\n    mode: \"cors\",\n    body: JSON.stringify(data),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  })\n    .then(res => {\n      return res;\n    })\n    .catch(err => console.error(err.message));\n}\n\nconst API_KEY = window.config.API_KEY;\nconst THROTTLE_WAIT = 1000; // 1 second\n\nconst throttle = _throttle(THROTTLE_WAIT);\n\nconst enhance = compose(\n  withState(\"groups\", \"setGroups\", {}),\n  withState(\"lights\", \"setLights\", {}),\n  // TODO: change these methods to hook the Hue Emulator API calls\n  // entity may be a light or a room, they have an extra `id` property\n  // the second argument is the new value selected by the user\n  withProps({\n    onColorTemperatureChange: throttle((entity, temp) =>\n      httpPutRequest(`/api/${API_KEY}/lights/${entity.id}/state`, { ct: temp })\n    ),\n    onColorChange: throttle((entity, color) =>\n      httpPutRequest(`/api/${API_KEY}/lights/${entity.id}/state`, {\n        xy: rgbToCie(color[\"rgb\"][\"r\"], color[\"rgb\"][\"g\"], color[\"rgb\"][\"b\"])\n      })\n    ),\n    onBrightnessChange: throttle((entity, bri) =>\n      httpPutRequest(`/api/${API_KEY}/lights/${entity.id}/state`, { bri: bri })\n    ),\n    onStateChange: (entity, state) =>\n      httpPutRequest(\n        `/api/${API_KEY}/${\n          entity.type === \"Room\"\n            ? \"groups/\" + entity.id + \"/action\"\n            : \"lights/\" + entity.id + \"/state\"\n        }`,\n        { on: state }\n      ),\n    // this should trigger a state change on ALL the available lights\n    onGlobalStateChange: state =>\n      httpPutRequest(`/api/${API_KEY}/groups/0/action`, { on: state })\n  }),\n  lifecycle({\n    async componentDidMount() {\n      setInterval(async () => {\n        const res = await Promise.all([\n          fetch(`/api/${API_KEY}/groups`),\n          fetch(`/api/${API_KEY}/lights`)\n        ]);\n        const json = await Promise.all([res[0].json(), res[1].json()]);\n\n        this.props.setGroups(json[0]);\n        this.props.setLights(json[1]);\n      }, 1000);\n    }\n  })\n);\n\nconst AppWithData = enhance(App);\n\nrender(<AppWithData />, document.getElementById(\"root\"));\n"],"sourceRoot":""}